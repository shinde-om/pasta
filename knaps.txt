#include <stdio.h>

int max(int a, int b) { return (a > b) ? a : b; }

void knapSack(int W, int wt[], int val[], int n)
{
	int i, j;
	int K[n + 1][W + 1];

	for (i = 0; i <= n; i++)
	{
        	for (j = 0; j <= W; j++)
		{
			if (i == 0 || j == 0)
				K[i][j] = 0;
			else if (wt[i - 1] <= j)
				K[i][j] = max(K[i - 1][j],
				val[i - 1] + K[i - 1][j - wt[i - 1]]);
			else
				K[i][j] = K[i - 1][j];
		}
	}
	printf("\n The solution table:\n");
	for(i=0;i<=n;i++)
	{
		for(j=0;j<=W;j++)
		printf("%d\t", K[i][j]);
		printf("\n");
	}
	i = n;
	j = W;

	printf("\n The Selected Items: ");
	while (i > 0 && j > 0) {
		if (K[i][j] != K[i - 1][j]) {
			printf("Item-%d\t", i);
			j -= wt[i - 1];
		}
		i--;
	}
	printf("\n");
	printf("\n The Maximum profit gained = %d",K[n][W]);
} 
  
// Main Program 
int main() 
{ 
    
    int val[10], wt[10], W, n, i, j;
    printf("\n 0/1 Knapscak using Dynamic Programming");
    printf("\n How many objects?-->");
    scanf("%d", &n);
    printf("\n Enter the weights of %d objects:\n", n);
    for(i=0;i<n;i++)
        scanf("%d", &wt[i]);
    printf("\n Enter the values of %d objects:\n", n);
    for(i=0;i<n;i++)
        scanf("%d", &val[i]); 
    printf("\n Enter the maximum capacity of the Knapsack-->");
    scanf("%d", &W);
    knapSack(W, wt, val, n); 
    return 0; 
}