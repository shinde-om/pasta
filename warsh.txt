#include <stdio.h>
#define MAX_VERTICES 100

int adjacencyMatrix[MAX_VERTICES][MAX_VERTICES];
int transitiveClosure[MAX_VERTICES][MAX_VERTICES];
int numVertices;

void warshallTransitiveClosure() {
	for (int i = 0; i < numVertices; i++) {
 		for (int j = 0; j < numVertices; j++) {
 			transitiveClosure[i][j] = adjacencyMatrix[i][j];
 		}
 	}
 	for (int k = 0; k < numVertices; k++) {
 		for (int i = 0; i < numVertices; i++) {
 			for (int j = 0; j < numVertices; j++) {
 				transitiveClosure[i][j] = transitiveClosure[i][j] || (transitiveClosure[i][k] && transitiveClosure[k][j]);
 			}
 		}
 	}
}

void printTransitiveClosure() {
 	printf("Transitive Closure Matrix:\n");
 	for (int i = 0; i < numVertices; i++) {
 		for (int j = 0; j < numVertices; j++) {
 			printf("%d ", transitiveClosure[i][j]);
 		}
 		printf("\n");
 	}
}

int main() {
	numVertices = 4;
 
	int edges[][2] = {{0, 1}, {1, 2}, {1, 3}, {2, 0}, {2, 3}, {3, 3}};
 
	for (int i = 0; i < sizeof(edges) / sizeof(edges[0]); i++) {
 		int start = edges[i][0];
 		int end = edges[i][1];
 		adjacencyMatrix[start][end] = 1;
 	}
 	warshallTransitiveClosure();
 	printTransitiveClosure();
 	return 0;
}
