
#include <stdio.h> 
 
int board[8][8]; 
 
// Function to print the chessboard 
void printBoard(int n)  
{ 
                                                      
    for (int i = 0; i < n; i++)  
    { 
        for (int j = 0; j < n; j++)  
        { 
            printf("%d  ", board[i][j]); 
        } 
        printf("\n"); 
    } 
} 
 
// Function to check if placing a queen at board[row][col] is safe 
int isSafe(int row, int col, int n)  
{ 
    int i,j; 
    // Check left side of the current row 
    for (i = 0; i < col; i++)  
    { 
        if (board[row][i] == 1)  
        { 
            return 0; 
        } 
    } 
 
    // Check upper diagonal on the left side 
    for (i = row, j = col; i >= 0 && j >= 0; i--, j--)  
    { 
        if (board[i][j] == 1)  
        { 
            return 0; 
        } 
    } 
 
    // Check lower diagonal on the left side 
    for (i = row, j = col; i < n && j >= 0; i++, j--)  
    { 
        if (board[i][j] == 1)  
        { 
            return 0; 
        } 
    } 
 
    return 1; 
} 
 
// Function to solve the N Queens problem using backtracking 
int solveNQueens(int col, int n)  
{ 
    int i; 
    // Base case: All queens are placed 
    if (col == n)  
    { 
        return 1; 
                                                      
    } 
 
    for (i = 0; i < n; i++)  
    { 
        // Check if placing a queen at board[i][col] is safe 
        if (isSafe(i, col, n))  
        { 
            // Place the queen 
            board[i][col] = 1; 
 
            // Recur to place queens in the remaining columns 
            if (solveNQueens(col + 1,n))  
            { 
                return 1; // Solution found 
            } 
 
            // If placing a queen does not lead to a solution, backtrack 
            board[i][col] = 0; 
        } 
    } 
 
    return 0; // No solution in this branch 
} 
 
int main()  
{ 
    int i,j,n; 
    printf("\n N-Queens"); 
    printf("\n *************************"); 
     
    do 
    { 
        printf("\n How many queens?-->"); 
        scanf("%d", &n); 
        if(n<4 || n>8) 
            printf("\n Enter the number of queens(>=4 and <=8"); 
    }while(n<4 || n>8); 
     
    // Initialize the chessboard 
    for (i = 0; i < n; i++)  
    { 
        for (j = 0; j < n; j++)  
        { 
            board[i][j] = 0; 
        } 
    } 
 
    // Solve the N Queens problem 
    if (solveNQueens(0,n))  
    { 
        printf("Solution found:\n"); 
        printBoard(n); 
                                              
 
    } else  
    { 
        printf("No solution exists.\n"); 
    } 
 
    return 0; 
} 
